mutate_if(is.numeric, round, 2) %>%
interplot(hjust = 0,
xy= T, vjust=-1,
xlab = "Gender",
ylab = "AveragePleasantness")+
labs(linetype ="Condition")
mysummaryBy(AveragePleasantness ~ Gender + Condition, data = Erotic_picture_love) %>%
mutate_if(is.numeric, round, 2) %>%
interplot(hjust = 0,
xy= T, vjust=-1,
xlab = "Gender",
ylab = "AveragePleasantness",
legend_title = "Condition")
mysummaryBy(AveragePleasantness ~ Gender + Condition, data = Erotic_picture_love) %>%
mutate_if(is.numeric, round, 2) %>%
interplot(hjust = 0,
xy= T, vjust=-1,
xlab = "Gender",
ylab = "AveragePleasantness",
legend_title = "Condition")
# labs(linetype ="Condition")
mysummaryBy(AveragePleasantness ~ Gender + Condition, data = Erotic_picture_love) %>%
# mutate_if(is.numeric, round, 2) %>%
interplot(hjust = 0,
xy= T, vjust=-1,
xlab = "Gender",
ylab = "AveragePleasantness",
legend_title = "Condition")
# labs(linetype ="Condition")
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
#word_document
)
setwd("F:/Rwork/04_Book/book1")
library(rstatix)
# devtools::install_github("shoutjoy/jjstat")
library(jjstat)  # statistical summary
library(knitr)
mysummaryBy(AveragePleasantness ~ Gender + Condition, data = Erotic_picture_love) %>%
# mutate_if(is.numeric, round, 2) %>%
interplot(hjust = 0,
xy= T, vjust=-1,
xlab = "Gender",
ylab = "AveragePleasantness",
legend_title = "Condition")
epal.plot <-  Erotic_picture_love %>%
group_by(Gender, Condition) %>%
summarise(AP.Mean = mean(AveragePleasantness),
SD = sd(AveragePleasantness),
N=n())
epal.plot <- epal.plot %>%
mutate_if(is.numeric, round, 2)  # 변수가 numeric인 경우만 round처리
epal.plot %>% head()
#interaction plot####method 1
epal.plot   %>% ggplot(aes(x = Gender,y = AP.Mean))+
geom_point(aes(col = Condition, shape = Condition),
size = 4)+
geom_line(aes(group = Condition, col = Condition, lty = Condition),
lwd = 1.2)+
geom_text(aes(y = AP.Mean+0.1,
label= round(AP.Mean,2)))
mysummaryBy(AveragePleasantness ~ Gender + Condition, data = Erotic_picture_love) %>%
# mutate_if(is.numeric, round, 2) %>%
interplot(hjust = 0,
xy= T, vjust=-1,
xlab = "Gender",
ylab = "AveragePleasantness",
legend_title = "Condition")
mysummaryBy(AveragePleasantness ~ Gender + Condition, data = Erotic_picture_love) %>%
mutate_if(is.numeric, round, 2) %>%
interplot(hjust = 0,
xy= T, vjust=-1,
xlab = "Gender",
ylab = "AveragePleasantness",
legend_title = "Condition")
Erotic_picture_love <- jjstat::Erotic_picture_love
Erotic_picture_love  %>%  str()
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
#word_document
)
setwd("F:/Rwork/04_Book/book1")
library(rstatix)
# devtools::install_github("shoutjoy/jjstat")
library(jjstat)  # statistical summary
library(knitr)
Erotic_picture_love <- jjstat::Erotic_picture_love
Erotic_picture_love  %>%  str()
mysummaryBy(AveragePleasantness ~ Gender + Condition, data = Erotic_picture_love) %>%
mutate_if(is.numeric, round, 2) %>%
interplot(hjust = 0,
xy= T, vjust=-1,
xlab = "Gender",
ylab = "AveragePleasantness",
legend_title = "Condition")
# labs(linetype ="Condition")
mysummaryBy(AveragePleasantness ~ Gender + Condition, data = Erotic_picture_love) %>%
# mutate_if(is.numeric, round, 2) %>%
interplot(hjust = 0,
xy= T, vjust=-1,
xlab = "Gender",
ylab = "AveragePleasantness",
legend_title = "Condition")
mysummaryBy(AveragePleasantness ~ Gender + Condition, data = Erotic_picture_love) %>%
# mutate_if(is.numeric, round, 2) %>%
interplot(hjust = 0,
xy= T, vjust=-1, yadd=0.3,
xlab = "Gender",
ylab = "AveragePleasantness",
legend_title = "Condition")
mysummaryBy(AveragePleasantness ~ Gender + Condition, data = Erotic_picture_love) %>%
# mutate_if(is.numeric, round, 2) %>%
interplot(hjust = 0,
xy= T, vjust=-1, yadd=0.1,
xlab = "Gender",
ylab = "AveragePleasantness",
legend_title = "Condition")
mysummaryBy(AveragePleasantness ~ Gender + Condition, data = Erotic_picture_love) %>%
# mutate_if(is.numeric, round, 2) %>%
interplot(hjust = 0,
xy= T, vjust=-1, yadd=0.1,
xlab = "Gender",
ylab = "AveragePleasantness",
legend_title = "Condition")
boxplot(value  ~ time, data = df_long )
df_1 = data.frame(
subject = c(1:6),
mon1 = c(45, 42, 36, 39, 51, 44),
mon3 = c(50, 42, 41, 35, 55, 49),
mon6 = c(55, 45, 43, 40, 59, 56))
# df_1
df_long = df_1%>%
tidyr::pivot_longer(names_to ="time",
cols = -subject)
df_long
boxplot(value  ~ time, data = df_long )
boxplot(value  ~ subject, data = df_long )
# boxplot(value  ~ subject, data = df_long )
df_long %>%
ggplot(aes(x = subject, y = value))+
geom_boxplot()
# boxplot(value  ~ subject, data = df_long )
df_long %>%
ggplot(aes(x = factor(subject), y = value))+
geom_boxplot()
df_long %>% ggplot(mapping = aes(x = value)) +
geom_histogram(bins = 4)+
facet_wrap(~ time)
# repeated measures ANOVA
df_long %>% rstatix::anova_test(value ~ factor(time)  + Error(subject/time))
# or use character vector
df_long %>% rstatix::anova_test( dv = value, wid= subject, within= c(time))
# Extract ANOVA table and apply correction
df_long %>% rstatix::anova_test(value ~ factor(time)  + Error(subject/time))%>%
rstatix::get_anova_table(., correction = "GG")
# repeated measures ANOVA
df_long %>% rstatix::anova_test(value ~ factor(time)  + Error(subject/time)) %>%
summary()
# repeated measures ANOVA
df_long %>% rstatix::anova_test(value ~ factor(time)  + Error(subject/time))
aov(value ~ factor(time)  + Error(subject/time) , data=df_long) %>%
summary()
df_long1
df1_long
df_long %>%
ggplot(aes(x = time, y = value))+
geom_boxplot()
# boxplot(value  ~ subject, data = df_long )
df_long %>%
ggplot(aes(x = factor(subject), y = value))+
geom_boxplot()
## graph
df_long %>%
ggplot(aes(x = time, y = value))+
geom_point(aes(color=subject), size=3, show.legend = FALSE)+
geom_line(aes(group = subject, col=subject), show.legend = FALSE )
SST <- df_1 %>% mutate(subject_mean = rowMeans(df_1[,-1]),
m1.mean = mean(mon1),
m3.mean = mean(mon3),
m6.mean = mean(mon6),
ground.mean = mean(subject_mean),
N = length(mon1),
m1.sq = (m1.mean- ground.mean )^2,
m3.sq = (m3.mean- ground.mean )^2,
m6.sq = (m6.mean- ground.mean )^2,
SStime = sum( m1.sq + m3.sq + m6.sq)
)
SST
SST <- df_1 %>% mutate(subject_mean = rowMeans(df_1[,-1]),
m1.mean = mean(mon1),
m3.mean = mean(mon3),
m6.mean = mean(mon6),
ground.mean = mean(subject_mean),
N = length(mon1),
m1.sq = (m1.mean- ground.mean )^2,
m3.sq = (m3.mean- ground.mean )^2,
m6.sq = (m6.mean- ground.mean )^2,
SStime = sum( m1.sq + m3.sq + m6.sq)
) %>% Round(2)
SST <- df_1 %>% mutate(subject_mean = rowMeans(df_1[,-1]),
m1.mean = mean(mon1),
m3.mean = mean(mon3),
m6.mean = mean(mon6),
ground.mean = mean(subject_mean),
N = length(mon1),
m1.sq = (m1.mean- ground.mean )^2,
m3.sq = (m3.mean- ground.mean )^2,
m6.sq = (m6.mean- ground.mean )^2,
SStime = sum( m1.sq + m3.sq + m6.sq)
) %>% Round(2)
SST
interplot_data(6,7,4,5, type="plot")
interplot_data(1,4,7,6, type="plot")
interplot_data(2,1,5,3, type="plot")
interplot_data(2,1,5,3, type="plot")
interplot_data(98,40,98,60, 98, 80, row = 3, col=2, type="plot" , xy=TRUE,
yadd = 5)
interplot_data( 60, 40, 50, 30, 20,20, row = 3, col=2, type="plot" ,
xy = TRUE,
yadd=5)
interplot_data( 60, 40, 50, 30, 20,20, row = 3, col=2, type="plot" ,
xy = TRUE,
yadd=5)
interplot_data( 60, 40, 50, 30, 20,20, row = 3, col=2, type="plot" ,
xy = FALSE, yadd=5)
df_long %>% group_by(time)%>%
rstatix::get_summary_stats(value)
## graph
df_long %>%
ggplot(aes(x = time, y = value))+
geom_point(aes(color=subject), size=3, show.legend = FALSE)+
geom_line(aes(group = subject, col=subject), show.legend = FALSE )
df_long %>%
ggplot(aes(x = time, y = value))+
geom_boxplot()
# boxplot(value  ~ subject, data = df_long )
df_long %>%
ggplot(aes(x = factor(subject), y = value))+
geom_boxplot()
epal.em <- emmeans(epal.aov, "grp")
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
#word_document
)
setwd("F:/Rwork/04_Book/book1")
library(rstatix)
# devtools::install_github("shoutjoy/jjstat")
library(jjstat)  # statistical summary
library(knitr)
Erotic_picture_love <- jjstat::Erotic_picture_love
Erotic_picture_love  %>%  str()
#A 2 (Gender: Male, Female) x 2 (Condition: Art, Nudes) ANOVA on pleasantness of the stimuli shows an interaction between Gender and Condition.
aov(AveragePleasantness ~ Gender*Condition, data =  Erotic_picture_love,
contrasts = list(Gender = contr.sum, Condition = contr.sum)) %>%
rstatix::Anova(type =3) %>%  round(3)
aov(AveragePleasantness ~ Gender*Condition, data =  Erotic_picture_love) %>%
report_aov()
epal.plot <-  Erotic_picture_love %>%
group_by(Gender, Condition) %>%
summarise(AP.Mean = mean(AveragePleasantness),
SD = sd(AveragePleasantness),
N=n())
epal.plot <- epal.plot %>%
mutate_if(is.numeric, round, 2)  # 변수가 numeric인 경우만 round처리
epal.plot %>% head()
#interaction plot####method 1
epal.plot   %>% ggplot(aes(x = Gender,y = AP.Mean))+
geom_point(aes(col = Condition, shape = Condition),
size = 4)+
geom_line(aes(group = Condition, col = Condition, lty = Condition),
lwd = 1.2)+
geom_text(aes(y = AP.Mean+0.1,
label= round(AP.Mean,2)))
mysummaryBy(AveragePleasantness ~ Gender + Condition, data = Erotic_picture_love) %>%
# mutate_if(is.numeric, round, 2) %>%
interplot(hjust = 0,
xy= T, vjust=-1, yadd=0.1,
xlab = "Gender",
ylab = "AveragePleasantness",
legend_title = "Condition")
library(heplots)
install.packages("heplots")
library(heplots)
str(Skulls)
# method 1
Skulls %>% group_by(epoch) %>%
summarise_all(list(mean)) %>%
as.data.frame()
# method 1
Skulls %>% mysummaryBy(mb+bh+bl+nh ~ epoch)
# method 1
Skulls %>% mysummaryBy(c(mb+bh+bl+nh) ~ epoch)
?mysummaryBy
mysummaryBy(mpg ~ vs+am+cyl, data = mtcars)
mysummaryBy(mpg ~ vs+am, data = mtcars, agg=TRUE)
# method 1
Skulls %>% aggregate(mb+bh+bl+nh ~ epoch)
# method 1
# Skulls %>% aggregate(mb+bh+bl+nh ~ epoch)
aggregate(mb+bh+bl+nh ~ epoch, Skulls )
# method 1
# Skulls %>% aggregate(mb+bh+bl+nh ~ epoch)
aggregate(mb+bh+bl+nh ~ epoch,FUN=mean, data=Skulls )
# method 1
Skulls %>% aggregate(cbind(mb,bh,bl,nh) ~ epoch)
# method 1
Skulls %>% mysummaryBy(cbind(mb,bh,bl,nh) ~ epoch )
aggregate(cbind(mb,bh,bl,nh) ~ epoch , data=Skulls ,FUN=mean)
# method 1
mysummaryBy(cbind(mb,bh,bl,nh) ~ epoch, data=Skulls )
formula((cbind(mb,bh,bl,nh) ~ epoch)
)
formula((cbind(mb,bh,bl,nh) ~ epoch))[2]
aggregate(cbind(mb,bh,bl,nh) ~ epoch , data=Skulls,
FUN= function(x) {
c(
Mean = mean(x, na.rm = TRUE),
SD = sd(x, na.rm = TRUE),
N = length(x))})
aggregate(cbind(mb,bh,bl,nh) ~ epoch , data=heplots::Skulls,
FUN= function(x) {
c(
Mean = mean(x, na.rm = TRUE),
SD = sd(x, na.rm = TRUE),
N = length(x))})
# method 1
# mysummaryBy(cbind(mb,bh,bl,nh) ~ epoch, data=Skulls )
aggregate(cbind(mb,bh,bl,nh) ~ epoch , data=heplots::Skulls,
FUN= function(x) {
c(
Mean = mean(x, na.rm = TRUE),
SD = sd(x, na.rm = TRUE),
N = length(x))})
aggregate(cbind(mb,bh,bl,nh) ~ epoch , data=heplots::Skulls,
FUN= mean)
aggregate(cbind(mb,bh,bl,nh) ~ epoch , data=heplots::Skulls,
FUN= mean) %>% Round(2)
aggregate(cbind(mb,bh,bl,nh) ~ epoch , data = Skulls, mean) %>%
Round(2)
"the epoch the skull as assigned to, an ordered factor with levels c4000BC c3300BC, c1850BC, c200BC, and cAD150, where the years are only given approximately, of course" %>% k()
"the epoch the skull as assigned to, an ordered factor with levels c4000BC c3300BC, c1850BC, c200BC, and cAD150, where the years are only given approximately, of course" %>% e()
" mb(maximal breadth of the skull), bh(basibregmatic height of the skull), bl(basialiveolar length of the skull), nh(nasal height of the skull)" %>% k()
"The epochs correspond to the following periods of Egyptian history:
the early predynastic period (circa 4000 BC);
the late predynastic period (circa 3300 BC);
the 12th and 13th dynasties (circa 1850 BC);
the Ptolemiac period (circa 200 BC);
the Roman period (circa 150 AD)." %>% k()
"The question is whether the measurements change over time. Non-constant measurements of the skulls over time would indicate interbreeding with immigrant populations.
Note that using polynomial contrasts for epoch essentially treats the time points as equally spaced." %>% ㅏ()
"The question is whether the measurements change over time. Non-constant measurements of the skulls over time would indicate interbreeding with immigrant populations.
Note that using polynomial contrasts for epoch essentially treats the time points as equally spaced." %>% k()
Skulls %>% group_by(epoch) %>%
summarise_at(c("mb","bh","bl","nh"), mean)
# method 1
Skulls %>% group_by(epoch) %>%
summarise_all(list(mean))
aggregate(cbind(mb,bh,bl,nh) ~ epoch , data = Skulls, mean) %>%
Round()
# pretest
manova(cbind(mb,bh,bl,nh)~ epoch, data=Skulls)
"Class "manova" differs from class "aov" in selecting a different summary method. Function manova calls aov and then add class "manova" to the result object for each stratum." %>% k()
"Class 'manova'' differs from class 'aov' in selecting a different summary method. Function manova calls aov and then add class 'manova' to the result object for each stratum." %>% k()
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
#word_document
)
setwd("F:/Rwork/04_Book/book1")
library(rstatix)
# devtools::install_github("shoutjoy/jjstat")
library(jjstat)  # statistical summary
library(knitr)
library(heplots)
str(Skulls)
# method 1
Skulls %>% group_by(epoch) %>%
summarise_all(list(mean))
#method2
Skulls %>% group_by(epoch) %>%
summarise_at(c("mb","bh","bl","nh"), mean)
# method 3
aggregate(cbind(mb,bh,bl,nh) ~ epoch , data = Skulls, mean) %>%
Round()
# pretest
manova(cbind(mb,bh,bl,nh)~ epoch, data=Skulls)
manova(cbind(mb,bh,bl,nh)~ epoch, data=Skulls) %>%
report_manova()
manova(cbind(mb,bh,bl,nh)~ epoch, data=Skulls) %>%
report_manova("all")
manova(cbind(mb,bh,bl,nh)~ epoch, data=Skulls) %>%
report_manova("all")[1]
manova(cbind(mb,bh,bl,nh)~ epoch, data=Skulls) %>%
report_manova("all")["MANOVA_test"]
skull_manova = manova(cbind(mb,bh,bl,nh) ~ epoch, data = Skulls) %>%
report_manova("all")
skull_manova
skull_manova[1]
skull_manova[3]
skull_manova[[3]]
skull_manova[[1]]
skull_manova[[4]]
str(Y)
## Example on producing plastic film from Krzanowski (1998, p. 381)
Y <- cbind.data.frame(
tear=c(6.5, 6.2, 5.8, 6.5, 6.5, 6.9, 7.2, 6.9, 6.1, 6.3,
6.7, 6.6, 7.2, 7.1, 6.8, 7.1, 7.0, 7.2, 7.5, 7.6),
gloss=c(9.5, 9.9, 9.6, 9.6, 9.2, 9.1, 10.0, 9.9, 9.5, 9.4,
9.1, 9.3, 8.3, 8.4, 8.5, 9.2, 8.8, 9.7, 10.1, 9.2),
opacity=c(4.4, 6.4, 3.0, 4.1, 0.8, 5.7, 2.0, 3.9, 1.9, 5.7,
2.8, 4.1, 3.8, 1.6, 3.4, 8.4, 5.2, 6.9, 2.7, 1.9),
rate = gl(2,10, labels = c("Low", "High")),
additive = gl(2, 5, length = 20, labels = c("Low", "High")) )
str(Y)
manova(cbind(tear, gloss, opacity) ~ rate * additive, data=Y)
manova(cbind(tear, gloss, opacity) ~ rate * additive, data=Y) %>%
report_manova()
manova(cbind(tear, gloss, opacity) ~ rate * additive, data=Y) %>%
report_manova("all")
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
#word_document
)
setwd("F:/Rwork/04_Book/book1")
library(rstatix)
# devtools::install_github("shoutjoy/jjstat")
library(jjstat)  # statistical summary
library(knitr)
mtcars$vs <- factor(mtcars$vs, level=c(0, 1),
labels = c("V-shaped", "straight" ) )
table(mtcars$vs)
table(mtcars$am, mtcars$vs)
table(mtcars$cyl)
table(mtcars$cyl) %>%
barplot()
table(mtcars$cyl) %>%
barplot(ylab="Count")
table(mtcars$cyl) %>%
barplot(ylab="Count", col=2:4)
table(mtcars$cyl, exclude="6")
y <- c(0, 0, 0, 3, 4, 4, 4, 4)
z <- c(0, 0, 1, 3, 4, 5, 5, 5)
table(y)
# Sample data
data <- c("B", "A", NA, NA, "A", "C", "B")
# Count NA values if any
table(data, useNA = "ifany")
table(data, useNA = "always")
# Sample data
data <- c("B", "A", "A", "C", "B")
# Count NA values even if there are none
table(data, useNA = "always")
data.frame(table(mtcars$am, mtcars$vs))
barplot(table(mtcars$am, mtcars$vs))
barplot(table(mtcars$am, mtcars$vs), beside = TRUE)
barplot(table(mtcars$am, mtcars$vs), beside = TRUE, col = 2:#)
barplot(table(mtcars$am, mtcars$vs), beside = TRUE, col = 2:3)
barplot(table(mtcars$am, mtcars$vs), beside = TRUE, col = 2:3)
barplot(table(mtcars$am, mtcars$vs), beside = TRUE, col = 2:3)
barplot(table(mtcars$am, mtcars$vs), beside = FALSE, col = 2:3)
barplot(table(mtcars$am, mtcars$vs), beside = TRUE, col = 2:3)
#legend
legend("topright", legend = c("0", "1"), fill = 2:3)
#변수의 factor처리
mtcars$am <- factor(mtcars$am, level=c(0, 1),
labels = c("automatic", "manual" ) )
table(mtcars$am, mtcars$vs)
data.frame(table(mtcars$am, mtcars$vs))
barplot(table(mtcars$am, mtcars$vs), beside = TRUE, col = 2:3)
#legend
legend("topright", legend = c("Automatic", "manual"), fill = 2:3)
barplot(table(mtcars$am, mtcars$vs), beside = TRUE, col = 2:3)
#legend
legend("topright", legend = c("automatic", "manual"), fill = 2:3)
legend("topright", legend = c("automatic", "manual"), fill = 2:3)
barplot(table(mtcars$am, mtcars$vs), beside = FALSE, col = 2:3)
legend("topright", legend = c("automatic", "manual"), fill = 2:3)
barplot(table(mtcars$am, mtcars$vs), beside = FALSE, col = 2:3)
legend("top", legend = c("automatic", "manual"), fill = 2:3)
barplot(table(mtcars$am, mtcars$vs), beside = FALSE, col = 2:3, ylim=c(0, 20))
legend("topright", legend = c("automatic", "manual"), fill = 2:3)
table(mtcars$am, mtcars$vs) %>%
prop.table()
table(mtcars$am, mtcars$vs) %>%
addmargins()
table(mtcars$am, mtcars$vs) %>%
addmargins(margin = 1)
table(mtcars$am, mtcars$vs) %>%
addmargins(margin = 2)
xtabs(~ am + vs, data = mtcars)
xtabs(cyl ~ am + vs, data = mtcars)
xtabs(gear ~ am + vs, data = mtcars)
mtcars$cyl = as.factor(mtcars$cyl)
xtabs(cyl ~ am + vs, data = mtcars)
xtabs(mpg ~ am + vs, data = mtcars)
mtcars
table(mtcars$am, mtcars$vs) %>%
chisq.test()
32.6/51.8
1- 32.6/51.8
67.1/800
18.3/300
3/8
