cbind.data.frame(
method =c("raw_data","Listwise Deletion","Pairwise Deletion"),
N = c(nrow(sleep),
nrow(sleep_all) ,
nrow(sleep_partial))
)
# Listwise Deletion
sleep_all = na.omit(sleep)
cor_all= cor(sleep_all$BodyWgt, sleep_all$NonD)
nrow(sleep)
nrow(sleep_all)
#  Pairwise Deletion
cbind.data.frame(
method =c("raw_data","Listwise Deletion","Pairwise Deletion"),
N = c(nrow(sleep),nrow(sleep_all) ,nrow(sleep_partial))
)
#  Pairwise Deletion
cbind.data.frame(
method =c("raw_data","Listwise Deletion","Pairwise Deletion"),
N = c(nrow(sleep),nrow(sleep_all) ,nrow(sleep_partial)),
cor = c(NA,cor_all, cor_partial )
)
#  Pairwise Deletion
cbind.data.frame(
method =c("raw_data","Listwise Deletion","Pairwise Deletion"),
N = c(nrow(sleep),nrow(sleep_all) ,nrow(sleep_partial)),
cor = c("Failure to calculate.",cor_all, cor_partial )
)
#  Pairwise Deletion
cbind.data.frame(
method =c("raw_data","Listwise Deletion","Pairwise Deletion"),
N = c(nrow(sleep),nrow(sleep_all) ,nrow(sleep_partial)),
cor = c("Failure to calculate.",
cor_all, cor_partial )
)
#  Pairwise Deletion
cbind.data.frame(
method =c("raw_data","Listwise Deletion","Pairwise Deletion"),
N = c(nrow(sleep),nrow(sleep_all) ,nrow(sleep_partial)),
cor = c("Failure to calculate.",
round(cor_all, 3),
round(cor_partial, 3) )
)
#  Pairwise Deletion
cbind.data.frame(
method =c("raw_data","Listwise Deletion","Pairwise Deletion"),
N = c(nrow(sleep),nrow(sleep_all) ,nrow(sleep_partial)),
Cor = c("Failure to calculate.",
round(cor_all, 3),
round(cor_partial, 3) )
)
n = df_long %>%
group_by(name) %>%
summarize(N=n())
#ground_mean
ground_mean = mean(df_long$value)
ground_mean
#group mean
grp_mean = ave(df_long$value, df_long$name) %>%
unique()%>%
data.frame() %>%
`rownames<-`(c("a1_mean","a2_mean","a3_mean")) %>%
`colnames<-`(c("mean.value"))
anovaTableData <-anovaData %>%
dplyr::select(6:13) %>% unique()
anovaData = df_long %>% mutate(
grp_mean = ave(df_long$value, df_long$name), #그룹별 평균
grand_mean = mean(df_long$value),  #전체 평균
n = ave(df_long$value, df_long$name, FUN = function(x) length(x)), #그룹별샘플수
Sb = sum(unique(n*(grp_mean - grand_mean)^2)), #between sum of square
dofb = length(unique(df_long$name)) -1, #degree of freedom between
MSb = Sb/dofb,   # mean of square bewteen
Sw = sum((value - grp_mean)^2), #winthin sum of square
dofw = length(unique(df_long$name))*(n-1), #degree of freedom within
MSw = Sw/dofw,   #mean of square within
F.value = MSb/MSw,
p.value = 1-pf(F.value, dofb, dofw)
)
# df1 = jjstat::df1
df1 = data.frame(a1 = c(6, 8, 4, 5, 3, 4),
a2 = c(8, 12, 9, 11, 6, 8),
a3 = c(13, 9 ,11, 8, 7, 12))
df1
df_long <-  df1 |>
pivot_longer(cols = c(a1,a2,a3)) |>
arrange(name)
df_long
anovaData = df_long %>% mutate(
grp_mean = ave(df_long$value, df_long$name), #그룹별 평균
grand_mean = mean(df_long$value),  #전체 평균
n = ave(df_long$value, df_long$name, FUN = function(x) length(x)), #그룹별샘플수
Sb = sum(unique(n*(grp_mean - grand_mean)^2)), #between sum of square
dofb = length(unique(df_long$name)) -1, #degree of freedom between
MSb = Sb/dofb,   # mean of square bewteen
Sw = sum((value - grp_mean)^2), #winthin sum of square
dofw = length(unique(df_long$name))*(n-1), #degree of freedom within
MSw = Sw/dofw,   #mean of square within
F.value = MSb/MSw,
p.value = 1-pf(F.value, dofb, dofw)
)
anovaData[,c(1,2,4,6,8,11,12,13)]
anovaTableData <-anovaData %>%
dplyr::select(6:13) %>% unique()
anovaTableData
rbind.data.frame(
anovaTableData[1,c(1,2,3,7,8)] %>%
`colnames<-`(c("Sum_sq","Df", "Mean_sq","F","p")),
anovaTableData[1,c(4,5,6,7,8)] %>%
`colnames<-`(c("Sum_sq","Df", "Mean_sq","F","p"))) %>%
as.data.frame() %>% `row.names<-`(c("between","within")) %>% round(3)
#group mean
grp_mean = ave(df_long$value, df_long$name) %>%
unique()%>%
data.frame() %>%
`rownames<-`(c("a1_mean","a2_mean","a3_mean")) %>%
`colnames<-`(c("mean.value"))
grp_mean
#ground_mean
ground_mean = mean(df_long$value)
ground_mean
n = df_long %>%
group_by(name) %>%
summarize(N=n())
n = df_long %>%
group_by(name) %>%
summarize(N=n(value))
n = df_long %>%
group_by(name) %>%
summarize(n())
df_long %>%
group_by(name) #%>%
# summarize(N= n())
# n = df_long %>%
#        group_by(name) %>%
#         summarize(N= n())
# n
df_long %>%
group_by(name) %>%
summarize(M=mean(value))
df_long %>%
group_by(by=name) %>%
summarize(M=mean(value))
df_long %>%
group_by(name) %>%
summarize(., N= n())
df_long %>%
dplyr::group_by(name)
dplyr::summarize( N= n())
df_long %>%
dplyr::group_by(name)
dplyr::summarize( N= n(value))
dplyr::summarize( N = length(value))
dplyr::summarize( N = length())
dplyr::summarize( N = length(df_long$value))
n = aggregate(value ~ name, length)
n
# n = df_long %>%
#        group_by(name) %>%
#         summarize(N= n())
# n
n = aggregate(value ~ name, length)
n[,2]*(grp_mean - ground_mean)^2
#ground_mean
ground_mean = mean(df_long$value)
ground_mean
# n = df_long %>%
#        group_by(name) %>%
#         summarize(N= n())
# n
n = aggregate(data=df_long, value ~ name, length)
n
n[,2]*(grp_mean - ground_mean)^2
# sum of square between
Sb= sum(n[,2]*(grp_mean - ground_mean)^2)
Sb
plot(y~ trt, data =fuel)
#statistical describe
fuel %>%
group_by(trt) %>%
summarise(M = mean(y),
SD = sd(y),
N = n(),
Median = median(y),
Max = max(y),
Min = min(y),
skewness = SKEW(y),
kurtosis = KURT(y),
SE = sd(y)/sqrt(n()),
lowerCI = mean(y)-1.96*SE,
upperCI = mean(y)+1.96*SE
) #%>% kable("pandoc", digits = 2, caption="기술통계분석")
#the other packages psych
jjstat::mysummaryBy( y ~ trt, data = fuel)
## same method
# fuel |> mysummaryBy(formula = y~ trt)
#다른방법 psych패키지 적용
# psych::describeBy(fuel ~ trt)
#the other packages psych
# jjstat::mysummaryBy( y ~ trt, data = fuel)
jjstat::Describe(y ~ trt, data = fuel)
#the other packages psych
jjstat::mysummaryBy( y ~ trt, data = fuel)
# jjstat::Describe(y ~ trt, data = fuel)
## same method
# fuel |> mysummaryBy(formula = y~ trt)
#다른방법 psych패키지 적용
# psych::describeBy(fuel ~ trt)
# plot(y~ trt, data =fuel)
fuel %>%
ggplot()+
geom_point(aes(x = trt, y = y ))
# plot(y~ trt, data =fuel)
fuel %>%
ggplot()+
geom_point(aes(x = trt, y = y ))+
theme_bw()
# plot(y~ trt, data =fuel)
fuel %>%
ggplot()+
geom_point(aes(x = trt, y = y ))+
labs(title = "fuel data의 scatterplot")+
theme_bw()
# plot(y~ trt, data =fuel)
fuel %>%
ggplot()+
geom_point(aes(x = trt, y = y ), size=3)+
labs(title = "fuel data의 scatterplot")+
theme_bw()
# plot(y~ trt, data =fuel)
fuel %>%
ggplot()+
geom_point(aes(x = trt, y = y ), size=3, alpha=0.6)+
labs(title = "fuel data의 scatterplot")+
theme_bw()
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
#word_document
)
setwd("F:/Rwork/04_Book/book1")
library(rstatix)
# devtools::install_github("shoutjoy/jjstat")
library(jjstat)  # statistical summary
library(knitr)
Erotic_picture_love <- jjstat::Erotic_picture_love
Erotic_picture_love |> str()
lm(AveragePleasantness ~ Gender*Condition,
Erotic_picture_love,
contrasts = list(Gender=contr.sum, Condition=contr.sum)) %>%
Anova(type=3) %>%  round(3)
#A 2 (Gender: Male, Female) x 2 (Condition: Art, Nudes) ANOVA on pleasantness of the stimuli shows an interaction between Gender and Condition.
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
#word_document
)
setwd("F:/Rwork/04_Book/book1")
library(rstatix)
# devtools::install_github("shoutjoy/jjstat")
library(jjstat)  # statistical summary
library(knitr)
interplot_data(6,7,4,5, type="mat")
interplot_data(6,7,4,5, type="plot")
interplot_data(6,7,4,5, type="plot", byrow=F)
interplot_data(6,7,4,5, type="plot")
interplot_data(6,7,4,5, type="plot")+ylim(0,8)
interplot_data(6,7,4,5, type="plot")+ylim(2,8)
interplot_data(6,7,4,5, type="plot")+ylim(3,8)
interplot_data(6,7,4,5, type="plot")+ylim(3.5,7.5)
interplot_data(6,7,4,5, type="mat") %>%
mutate(A_mean= rowMeans())
mutate(A_mean = apply(2,mean)
interplot_data(6,7,4,5, type="mat") %>%
interplot_data(6,7,4,5, type="mat") %>% class()
interplot_data(6,7,4,5, type="mat") %>% data.frame() %>%
mutate(A_mean = rowMeans())
rowMeans(interplot_data(6,7,4,5, type="mat") %>% data.frame() )
interplot_data(6,7,4,5, type="mat") %>% data.frame() %>%
mutate(R_mean = rowMeans(.))
interplot_data(6,7,4,5, type="mat") %>% data.frame() %>%
mutate(A_mean = rowMeans(.))
interplot_data(6,7,4,5, type="mat") %>% data.frame() %>%
mutate(A_mean = rowMeans(.)) %>%
rbind(B_eman= apply(1, mean))
interplot_data(6,7,4,5, type="mat") %>% data.frame() %>%
mutate(A_mean = rowMeans(.))
interplot_data(1,4,7,6, type="mat")
interplot_data(1,4,7,6, type="plot")
interplot_data(1,4,7,6, type="all")
interplot_data(1,4,7,6, type="long") %>% interplot()
interplot_data(1,4,7,6, type="long") %>% interplot(t=TRUE)
interplot_data(1,4,7,6, type="long") #%>% interplot(t=TRUE)
interplot_data(1,4,7,6, type="long") %>% interplot(t=TRUE)
interplot_data(1,4,7,6, type="long") %>% interplot()
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
#word_document
)
setwd("F:/Rwork/04_Book/book1")
library(rstatix)
# devtools::install_github("shoutjoy/jjstat")
library(jjstat)  # statistical summary
library(knitr)
interplot_data(6,7,4,5, type="plot")+
ylim(3.5,7.5)
interplot_data(1,4,7,6, type="long")
interplot_data(1,4,7,6, type="mat")
interplot_data(1,4,7,6, type="long")
interplot_data(1,4,7,6, type="plot")
interplot_data(1,4,7,6, type="plot",xy=T)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
#word_document
)
setwd("F:/Rwork/04_Book/book1")
library(rstatix)
# devtools::install_github("shoutjoy/jjstat")
library(jjstat)  # statistical summary
library(knitr)
interplot_data(6,7,4,5, type="plot")+
ylim(3.5,7.5)
interplot_data(1,4,7,6, type="mat")
interplot_data(1,4,7,6, type="plot",xy=T)
interplot_data(1,4,7,6, type="plot")
interplot_data(1,4,7,6, type="plot")
interplot_data(1,4,7,6, type="plot") +
ylim(3.5,7.5)
interplot_data(1,4,7,6, type="plot") +
ylim1,7.5)
interplot_data(1,4,7,6, type="plot") +
ylim(1,7.5)
interplot_data()2,1,5,3, type="mat")
interplot_data(2,1,5,3, type="mat")
interplot_data(2,1,5,3, type="plot")
interplot_data(2,1,5,3, type="plot")+
ylim(1,6)
interplot_data(2,1,5,3, type="plot")+
ylim(1, 5.5)
interplot_data(2,1,5,3, type="mat")
interplot_data(2,1,5,3, type="plot")+
ylim(1, 5.5)
interplot_data(2,6,5,3, type="mat")
interplot_data(2,6,5,3, type="ㅔㅣㅐㅅ")
interplot_data(2,6,5,3, type="plot")
interplot_data(2,6,5,3, type="plot")+
ylim(2, 6.5)
interplot_data(1, 4, 7, 6, type="mat")
interplot_data(1, 4, 7, 6, type="plot")+
yli
interplot_data(1, 4, 7, 6, type="plot")
interplot_data(1, 4, 7, 6, type="plot")
interplot_data(1, 4, 7, 6, type="plot")+
ylim(1, 7.5)
interplot_data(98,40,98,60, 98, 80, row = 3, col=2, type="mat" )
interplot_data(98,40,98,60, 98, 80, row = 3, col=2, type="mat" ) %>%
`colnames<-`(c("air","body"))
interplot_data(98,40,98,60, 98, 80, row = 3, col=2, type="mat" ) %>%
`colnames<-`(c("air","body")) %>%
`rownames<-`(c(40, 60, 80))
interplot_data(98,40,98,60, 98, 80, row = 3, col=2, type="mat" ) %>%
`colnames<-`(c("air","body")) %>%
`rownames<-`(c("40", "60", "80"))
interplot_data(98,40,98,60, 98, 80, row = 3, col=2, type="plot" )
interplot_data(98,40,98,60, 98, 80, row = 3, col=2, type="plot" , xy=TRUE)
interplot_data(98,40,98,60, 98, 80, row = 3, col=2, type="plot" , xy = FALSE)
interplot_data( 60, 40 50. 30, 20,20 row = 3, col=2, type="plot" , xy = FALSE)
interplot_data( 60, 40 50, 30, 20,20 row = 3, col=2, type="plot" , xy = FALSE)
interplot_data( 60, 40 50, 30, 20,20, row = 3, col=2, type="plot" , xy = FALSE)
interplot_data( 60, 40, 50, 30, 20,20, row = 3, col=2, type="plot" , xy = FALSE)
interplot_data( 60, 40, 50, 30, 20,20, row = 3, col=2, type="plot" , xy = TRUE)
interplot_data( 60, 40, 50, 30, 20,20, row = 3, col=2, type="mat")
SST <- df_1 %>% mutate(subject_mean = rowMeans(df_1[,-1]),
m1.mean = mean(mon1),
m3.mean = mean(mon3),
m6.mean = mean(mon6),
ground.mean = mean(subject_mean),
N = length(mon1),
m1.sq = (m1.mean- ground.mean )^2,
m3.sq = (m3.mean- ground.mean )^2,
m6.sq = (m6.mean- ground.mean )^2,
SStime = sum( m1.sq + m3.sq + m6.sq)
)
df_1 = data.frame(
subject = c(1:6),
mon1 = c(45, 42, 36, 39, 51, 44),
mon3 = c(50, 42, 41, 35, 55, 49),
mon6 = c(55, 45, 43, 40, 59, 56))
df_1
SST <- df_1 %>% mutate(subject_mean = rowMeans(df_1[,-1]),
m1.mean = mean(mon1),
m3.mean = mean(mon3),
m6.mean = mean(mon6),
ground.mean = mean(subject_mean),
N = length(mon1),
m1.sq = (m1.mean- ground.mean )^2,
m3.sq = (m3.mean- ground.mean )^2,
m6.sq = (m6.mean- ground.mean )^2,
SStime = sum( m1.sq + m3.sq + m6.sq)
)
SST
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
#word_document
)
setwd("F:/Rwork/04_Book/book1")
library(rstatix)
# devtools::install_github("shoutjoy/jjstat")
library(jjstat)  # statistical summary
library(knitr)
interplot_data(2,1,5,3, type="plot")+
ylim(1, 5.5)
interplot_data(2,1,5,3, type="plot")
interplot_data(2,6,5,3, type="plot")
interplot_data(1, 4, 7, 6, type="plot")
interplot_data(98,40,98,60, 98, 80, row = 3, col=2, type="plot" , xy=TRUE)
interplot_data(98,40,98,60, 98, 80, row = 3, col=2, type="plot" , xy = FALSE)
interplot_data( 60, 40, 50, 30, 20,20, row = 3, col=2, type="plot" , xy = TRUE)
interplot_data( 60, 40, 50, 30, 20,20, row = 3, col=2, type="plot" , xy = FALSE)
interplot_data( 60, 40, 50, 30, 20,20, row = 3, col=2, type="plot" , xy = FALSE)
Erotic_picture_love <- jjstat::Erotic_picture_love
Erotic_picture_love |> str()
lm(AveragePleasantness ~ Gender*Condition,
Erotic_picture_love,
contrasts = list(Gender=contr.sum, Condition=contr.sum)) %>%
Anova(type=3) %>%  round(3)
#A 2 (Gender: Male, Female) x 2 (Condition: Art, Nudes) ANOVA on pleasantness of the stimuli shows an interaction between Gender and Condition.
epal.plot <-  Erotic_picture_love %>%
group_by(Gender,Condition) %>%
summarise(AP.Mean = mean(AveragePleasantness),
SD = sd(AveragePleasantness),
N=n())
epal.plot
#interaction plot####method 1
library(ggplot2)
epal.plot   %>% ggplot(aes(x=Gender,y= AP.Mean))+
geom_point(aes(col=Condition,
shape=Condition))+
geom_line(aes(group=Condition,
col=Condition,
lty=Condition))+
geom_text(aes(y=AP.Mean+0.1,
label= round(AP.Mean,2)))
#emmip_interaction plot method 2
epal.lm <- aov(AveragePleasantness ~ Gender*Condition, Erotic_picture_love)
epal.lm %>% anova()
##plot
emmip.data <- emmeans::emmip(epal.lm, Condition ~ Gender )
#CIs
emmeans::emmip(epal.lm,
Condition ~ Gender,
CIs=TRUE )+
geom_text(aes(y = yvar + 0.1, label = round(yvar , 2)), hjust = -.5)
#emmip_interaction plot method 2
epal.lm <- aov(AveragePleasantness ~ Gender*Condition, Erotic_picture_love)
epal.lm %>% anova()
#group split####
#그룹을 순서대로 정리
epal_grp <- Erotic_picture_love %>% arrange(Gender, Condition)
epal_grp
#그룹변수 분리
epal_g1 <- epal_grp %>% filter(Gender=="Female") %>%
filter(Condition=="Abstract Art") %>%
mutate(grp="g1_FA")
epal_g2 <- epal_grp %>% filter(Gender=="Female") %>%
filter(Condition=="Nudes")%>%
mutate(grp="g2_FN")
epal_g3 <- epal_grp %>% filter(Gender=="Male") %>%
filter(Condition=="Abstract Art")%>%
mutate(grp="g3_MA")
epal_g4 <- epal_grp %>% filter(Gender=="Male") %>%
filter(Condition=="Nudes") %>%
mutate(grp="g4_MN")
#그룹 합치기
epal_o <- rbind(epal_g1, epal_g2,epal_g3,epal_g4)
#재정리
epal_o <- epal_o[,c(8, 1, 4, 7, 6, 5, 3, 2)]
epal_o
#marginal means #####
library(emmeans)
epal.aov <- aov(AveragePleasantness~grp, epal_o)
epal.aov %>% anova()
#boxplot
ggplot(epal_o, aes(x = grp,y = AveragePleasantness))+
geom_boxplot()
epal.em <- emmeans(epal.aov, "grp")
epal.em
#이방법도 가능
emmeans(epal.aov, ~grp)
#contrast coeff
contr = list("interation: m1-m2-m3+m4=0"=c(1,-1,-1,1),
"Con of Female: m1-m2=0"=c(1,-1,0,0),
"con of Male: m3-m4-0"=c(0,0,1,-1),
"Gender of Abstract: m1-m3=0"=c(1,0,-1,0),
"Gender of Nudes: m2-m4=0"=c(0,1,0,-1))
#result
contrast(epal.em,contr,adjust = "none")
epal.contrast <-contrast(epal.em,contr,adjust = "none")
epal.contrast %>% p_mark_sig()
contrast(epal.em,contr,adjust = "none") %>%
confint()%>%
confint_mark_sig()
df_long = df_1%>%
tidyr::pivot_longer(names_to ="time",
cols= -subject)
