
source("D:/SEM2.1.2.R")

mtcars


# 3.1.1. 빈도분석 -------------------------------------------------------------

library(tidyverse)  # dplyr: %>% (pipe)
data(mtcars)
mtcars %>% str()  # same as str(mtcars)


data(mtcars)
mtcars$am <- factor(mtcars$am,
                    level = c(0, 1),
                    labels = c("automatic", "manual" ))
# frequency analysis
table(mtcars$am)


mtcars$vs <- factor(mtcars$vs, level=c(0, 1),
                    labels = c("V-shaped", "straight" ) )
table(mtcars$vs)

#
table(mtcars$am, mtcars$vs)

data.frame(table(mtcars$am, mtcars$vs))



#### 3.1.1.2. count(), n()

# R을 사용하는 경우 다양한 라이브러리(library)를 사용할 수 있기 때문에 분석하는 방법이 한가지로 고정되어 있는 것은 아니다. 사용하는 라이브러리를 이용하여 다양한 분석을 할 수 있다. 먼저. dplyr패키지를 이용하여 나타내는 방법도 매우 유용하다. dplyr::count()는 매우 편리한 함수이다. 사용방법은 count(데이터, 변수)로 입력하여 사용한다.
count(mtcars, am)

mtcars %>% group_by(am)%>% summarise(N=n())


#frequency analysis : default option 
library(forcats)
forcats::fct_count(mtcars$am)
forcats::fct_count(mtcars$am)

# 이번에는 각 빈도에 비율을 포함시켜보자.\

# add proportion 
forcats::fct_count(mtcars$am, prop=TRUE) 




# zero를 보이게 만들기   -------
library(tidyr)
library(dplyr)

df1 <- data.frame(
  x = as.factor(c("A", "A", "A", "B", "B", "B")),
  y = as.factor(c("i", "ii", "ii", "i", "i", "iii")),
  z = 1:6
)

fct_count(df1$x)
fct_count(df1$y)

df1 %>% group_by(x,y) %>% summarise(N=n())



#factor로 처리하면 가능함 
y <- c(0, 0, 0, 3, 4, 4, 4, 4)
z <- c(0, 0, 1, 3, 4, 5, 5, 5)


factor(y, levels = 0:5)

table(factor(y, levels = 0:5))


table(y)
fct_count(y)   #error 

fct_count(factor(y))
fct_count(factor(y, levels = 0:5))

fct_count(factor(z))
fct_count(factor(z, levels = 0:5))


# visualisztion 
fct_count(factor(y)) %>% 
  ggplot(aes(x=f, y=n))+geom_bar(stat="Identity")+
  geom_text(aes(label=n), vjust=-.5)+
  ylim(0,2.5)

fct_count(factor(y, level=0:5))

fct_count(factor(y, level=0:5)) %>% 
  ggplot(aes(x=f, y=n))+geom_bar(stat="Identity")+
  geom_text(aes(label=n), vjust=-.5)+
  ylim(0,2.5)

#error : 개수가 맞지 않은 경우 
cbind.data.frame(
  Y= fct_count(factor(y)),
  Z =fct_count(factor(z))
)

# 개수를 맞추어서 조절한 경우 
cbind.data.frame(
  Y = fct_count(factor(y, levels = 0:5)) ,
  Z = fct_count(factor(z, levels = 0:5)) 
)



y <- c(0, 0, 0, 3, 4, 4, 4, 4)
z <- c(0, 0, 1, 3, 4, 5, 5, 5)
table(y)
table(z)


rbind.data.frame(
  Y=table(y),
  Z=table(z))

table(factor(y, levels = 0:5))
table(factor(z, levels = 0:5))


rbind.data.frame(
  Y=table(factor(y, levels = 0:5)),
  Z=table(factor(z, levels = 0:5))) %>% 
  `colnames<-`(replace(names(.),0:6,c(0:5)))
# `colnames<-`(replace(names(.),0:6,c("0","1","2","3","4","5")))

